# -*- coding: utf-8 -*-
"""dav_174.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S43XW03tw6N_Aw0EMEIAaEHxhhEfQgbB
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the data
df = pd.read_csv('/content/smartphones_data.csv (2).csv')

# Display first few rows
print(df.head())

# Basic dataset information
print(df.info())
print("\nMissing values:")
print(df.isna().sum())

# Ensure columns exist and contain only numeric values
for col in ['has_fingerprints', 'has_nfc', 'has_5g']:
    if col in df.columns:
        df[col] = pd.to_numeric(df[col], errors='coerce')  # Convert to numeric (handles non-numeric values)
        df[col] = df[col].fillna(0).astype(int)  # Fill NaN with 0 and convert to int

# Basic statistics
print("\nBasic statistics:")
print(df.describe())

# NumPy Operations
price_array = df['Price'].to_numpy()
print("\nMean Price:", np.mean(price_array))
print("Median Price:", np.median(price_array))
print("Standard Deviation:", np.std(price_array))

# Z-score Normalization for Price
price_mean = np.mean(df['Price'])
price_std = np.std(df['Price'])
df['Price_zscore'] = (df['Price'] - price_mean) / price_std
print("\nFirst 5 rows with Price Z-score:")
print(df[['Price', 'Price_zscore']].head())

# Boolean Indexing: Mid-range Smartphones (Price between 200-500)
mid_range_smartphones = df[(df['Price'] >= 200) & (df['Price'] <= 500)]
print("\nNumber of mid-range smartphones:", len(mid_range_smartphones))

# Pandas Groupby operations
brand_avg_price = df.groupby('brand_name')['Price'].mean()
print("\nAverage price per brand:")
print(brand_avg_price)

# Pivot Table
pivot_table = pd.pivot_table(df, index='brand_name', values='Price', aggfunc='mean')
print("\nPivot Table (Brand vs Average Price):")
print(pivot_table)

# Additional Pivot Table: Feature Availability
feature_pivot = pd.pivot_table(df, index='brand_name', values=['has_fingerprints', 'has_nfc', 'has_5g'], aggfunc='mean')
print("\nFeature Availability by Brand:")
print(feature_pivot)

# Visualizations
plt.figure(figsize=(8, 4))
sns.histplot(df['Price'], bins=20, color='blue')
plt.title('Price Distribution of Smartphones')
plt.xlabel('Price')
plt.ylabel('Count')
plt.show()

plt.figure(figsize=(8, 4))
sns.barplot(x='brand_name', y='Price', data=df)
plt.xticks(rotation=90)
plt.title('Average Price by Brand')
plt.show()

plt.figure(figsize=(8, 4))
sns.boxplot(x='brand_name', y='Price', data=df)
plt.xticks(rotation=90)
plt.title('Price Distribution by Brand')
plt.show()